
@article{gaston_moose_2009,
	title = {{MOOSE}: {A} parallel computational framework for coupled systems of nonlinear equations},
	volume = {239},
	issn = {0029-5493},
	shorttitle = {{MOOSE}},
	url = {https://www.sciencedirect.com/science/article/pii/S0029549309002635},
	doi = {10.1016/j.nucengdes.2009.05.021},
	abstract = {Systems of coupled, nonlinear partial differential equations (PDEs) often arise in simulation of nuclear processes. MOOSE: Multiphysics Object Oriented Simulation Environment, a parallel computational framework targeted at the solution of such systems, is presented. As opposed to traditional data-flow oriented computational frameworks, MOOSE is instead founded on the mathematical principle of Jacobian-free Newton–Krylov (JFNK). Utilizing the mathematical structure present in JFNK, physics expressions are modularized into “Kernels,” allowing for rapid production of new simulation tools. In addition, systems are solved implicitly and fully coupled, employing physics-based preconditioning, which provides great flexibility even with large variance in time scales. A summary of the mathematics, an overview of the structure of MOOSE, and several representative solutions from applications built on the framework are presented.},
	number = {10},
	urldate = {2025-10-14},
	journal = {Nuclear Engineering and Design},
	author = {Gaston, Derek and Newman, Chris and Hansen, Glen and Lebrun-Grandié, Damien},
	month = oct,
	year = {2009},
	pages = {1768--1778},
	file = {ScienceDirect Snapshot:/home/lloydf/Zotero/storage/LIDE77X8/S0029549309002635.html:text/html;Submitted Version:/home/lloydf/Zotero/storage/KHRH8QPX/Gaston et al. - 2009 - MOOSE A parallel computational framework for coup.pdf:application/pdf},
}

@article{permann_moose_2020,
	title = {{MOOSE}: {Enabling} massively parallel multiphysics simulation},
	volume = {11},
	issn = {2352-7110},
	shorttitle = {{MOOSE}},
	url = {https://www.sciencedirect.com/science/article/pii/S2352711019302973},
	doi = {10.1016/j.softx.2020.100430},
	abstract = {Harnessing modern parallel computing resources to achieve complex multiphysics simulations is a daunting task. The Multiphysics Object Oriented Simulation Environment (MOOSE) aims to enable such development by providing simplified interfaces for specification of partial differential equations, boundary conditions, material properties, and all aspects of a simulation without the need to consider the parallel, adaptive, nonlinear, finite element solve that is handled internally. Through the use of interfaces and inheritance, each portion of a simulation becomes reusable and composable in a manner that allows disparate research groups to share code and create an ecosystem of growing capability that lowers the barrier for the creation of multiphysics simulation codes. Included within the framework is a unique capability for building multiscale, multiphysics simulations through simultaneous execution of multiple sub-applications with data transfers between the scales. Other capabilities include automatic differentiation, scaling to a large number of processors, hybrid parallelism, and mesh adaptivity. To date, MOOSE-based applications have been created in areas of science and engineering such as nuclear physics, geothermal science, magneto-hydrodynamics, seismic events, compressible and incompressible fluid flow, microstructure evolution, and advanced manufacturing processes.},
	urldate = {2025-10-14},
	journal = {SoftwareX},
	author = {Permann, Cody J. and Gaston, Derek R. and Andrš, David and Carlsen, Robert W. and Kong, Fande and Lindsay, Alexander D. and Miller, Jason M. and Peterson, John W. and Slaughter, Andrew E. and Stogner, Roy H. and Martineau, Richard C.},
	month = jan,
	year = {2020},
	keywords = {Multiphysics, Finite-element, Framework, Multiscale, Parallel},
	pages = {100430},
	file = {ScienceDirect Snapshot:/home/lloydf/Zotero/storage/EF4GETXK/S2352711019302973.html:text/html;Submitted Version:/home/lloydf/Zotero/storage/2CMKGPKV/Permann et al. - 2020 - MOOSE Enabling massively parallel multiphysics si.pdf:application/pdf},
}

@article{olufsen_mathmi_2020,
	title = {μ{\textless}math{\textgreater}{\textless}mi mathvariant="normal" is="true"{\textgreater}μ{\textless}/mi{\textgreater}{\textless}/math{\textgreater}{DIC}: {An} open-source toolkit for digital image correlation},
	volume = {11},
	issn = {2352-7110},
	shorttitle = {μ{\textless}math{\textgreater}{\textless}mi mathvariant="normal" is="true"{\textgreater}μ{\textless}/mi{\textgreater}{\textless}/math{\textgreater}{DIC}},
	url = {https://www.sciencedirect.com/science/article/pii/S2352711019301967},
	doi = {10.1016/j.softx.2019.100391},
	abstract = {We here present a Digital Image Correlation toolkit, formulated as a Python package. This package aims at providing a complete toolkit for performing DIC analysis on experimental data, performing virtual experiments, as well as a framework for further development. A suite of tools for generating synthetic speckle images, modelling of sensor artefacts and deformation of images by displacement fields, are included. The virtual experiments are used as a part of the accuracy assessment of the toolkit as well as for testing during development. B-spline elements are employed for the discretisation of the displacement fields and allow the polynomial order and degree of continuity to be controlled by the user.},
	urldate = {2025-10-14},
	journal = {SoftwareX},
	author = {Olufsen, Sindre Nordmark and Andersen, Marius Endre and Fagerholt, Egil},
	month = jan,
	year = {2020},
	keywords = {B-splines, Digital Image Correlation, Python, Speckle image generation, Virtual experiments},
	pages = {100391},
	file = {ScienceDirect Snapshot:/home/lloydf/Zotero/storage/RPEET9UH/S2352711019301967.html:text/html},
}

@article{betteridge_ngspetsc_2024,
	title = {{ngsPETSc}: {A} coupling between {NETGEN}/{NGSolve} and {PETSc}},
	volume = {9},
	issn = {2475-9066},
	shorttitle = {{ngsPETSc}},
	url = {https://joss.theoj.org/papers/10.21105/joss.07359},
	doi = {10.21105/joss.07359},
	abstract = {Betteridge et al., (2024). ngsPETSc: A coupling between NETGEN/NGSolve and PETSc. Journal of Open Source Software, 9(104), 7359, https://doi.org/10.21105/joss.07359},
	language = {en},
	number = {104},
	urldate = {2025-10-14},
	journal = {Journal of Open Source Software},
	author = {Betteridge, Jack and Farrell, Patrick E. and Hochsteger, Matthias and Lackner, Christopher and Schöberl, Joachim and Zampini, Stefano and Zerbinati, Umberto},
	month = dec,
	year = {2024},
	pages = {7359},
	file = {Full Text PDF:/home/lloydf/Zotero/storage/VD9CQIW5/Betteridge et al. - 2024 - ngsPETSc A coupling between NETGENNGSolve and PE.pdf:application/pdf},
}

@article{harris_array_2020,
	title = {Array programming with {NumPy}},
	volume = {585},
	copyright = {2020 The Author(s)},
	issn = {1476-4687},
	url = {https://www.nature.com/articles/s41586-020-2649-2},
	doi = {10.1038/s41586-020-2649-2},
	abstract = {Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves1 and in the first imaging of a black hole2. Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.},
	language = {en},
	number = {7825},
	urldate = {2025-10-14},
	journal = {Nature},
	author = {Harris, Charles R. and Millman, K. Jarrod and van der Walt, Stéfan J. and Gommers, Ralf and Virtanen, Pauli and Cournapeau, David and Wieser, Eric and Taylor, Julian and Berg, Sebastian and Smith, Nathaniel J. and Kern, Robert and Picus, Matti and Hoyer, Stephan and van Kerkwijk, Marten H. and Brett, Matthew and Haldane, Allan and del Río, Jaime Fernández and Wiebe, Mark and Peterson, Pearu and Gérard-Marchant, Pierre and Sheppard, Kevin and Reddy, Tyler and Weckesser, Warren and Abbasi, Hameer and Gohlke, Christoph and Oliphant, Travis E.},
	month = sep,
	year = {2020},
	note = {Publisher: Nature Publishing Group},
	keywords = {Computational neuroscience, Computational science, Computer science, Software, Solar physics},
	pages = {357--362},
	file = {Full Text PDF:/home/lloydf/Zotero/storage/PEZDBDXT/Harris et al. - 2020 - Array programming with NumPy.pdf:application/pdf},
}

@article{virtanen_scipy_2020,
	title = {{SciPy} 1.0: fundamental algorithms for scientific computing in {Python}},
	volume = {17},
	copyright = {2020 The Author(s)},
	issn = {1548-7105},
	shorttitle = {{SciPy} 1.0},
	url = {https://www.nature.com/articles/s41592-019-0686-2},
	doi = {10.1038/s41592-019-0686-2},
	abstract = {SciPy is an open-source scientific computing library for the Python programming language. Since its initial release in 2001, SciPy has become a de facto standard for leveraging scientific algorithms in Python, with over 600 unique code contributors, thousands of dependent packages, over 100,000 dependent repositories and millions of downloads per year. In this work, we provide an overview of the capabilities and development practices of SciPy 1.0 and highlight some recent technical developments.},
	language = {en},
	number = {3},
	urldate = {2025-10-14},
	journal = {Nature Methods},
	author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan and van der Walt, Stéfan J. and Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C. J. and Polat, İlhan and Feng, Yu and Moore, Eric W. and VanderPlas, Jake and Laxalde, Denis and Perktold, Josef and Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and Harris, Charles R. and Archibald, Anne M. and Ribeiro, Antônio H. and Pedregosa, Fabian and van Mulbregt, Paul},
	month = mar,
	year = {2020},
	note = {Publisher: Nature Publishing Group},
	keywords = {Biophysical chemistry, Computational biology and bioinformatics, Technology},
	pages = {261--272},
	file = {Full Text:/home/lloydf/Zotero/storage/I5FLWIHW/Virtanen et al. - 2020 - SciPy 1.0 fundamental algorithms for scientific c.pdf:application/pdf},
}

@article{hunter_matplotlib_2007,
	title = {Matplotlib: {A} {2D} {Graphics} {Environment}},
	volume = {9},
	issn = {1558-366X},
	shorttitle = {Matplotlib},
	url = {https://ieeexplore.ieee.org/document/4160265},
	doi = {10.1109/MCSE.2007.55},
	abstract = {Matplotlib is a 2D graphics package used for Python for application development, interactive scripting,and publication-quality image generation across user interfaces and operating systems},
	number = {3},
	urldate = {2025-10-14},
	journal = {Computing in Science \& Engineering},
	author = {Hunter, John D.},
	month = may,
	year = {2007},
	keywords = {Python, application development, Computer languages, Equations, Graphical user interfaces, Graphics, Image generation, Interpolation, Operating systems, Packaging, Programming profession, scientific programming, scripting languages, User interfaces},
	pages = {90--95},
	file = {Snapshot:/home/lloydf/Zotero/storage/84XFPBBV/4160265.html:text/html},
}
